spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName= org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

server.port= 8081

spring.cloud.loadbalancer.ribbon.enabled = false
        
management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://eurekaserver:8070/eureka/


keycloak-client.server-url = http://keycloak:8080
keycloak-client.realm =  spmia-realm

spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=spring-micro-organization
spring.security.oauth2.client.registration.keycloak.client-secret=nnnkG31pyYVJYnxXn8Us8UhZTPKnLcXs
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:${server.port}/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.authorization-uri=${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=name
spring.security.oauth2.client.provider.keycloak.user-info-authentication-method=header
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs


