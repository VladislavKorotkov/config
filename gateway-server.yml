server:
  port: 8072
 
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eurekaserver:8070/eureka/


keycloak-client:
  server-url: http://keycloak:8080
  realm: spmia-realm
 
spring:
  cloud:
    loadbalancer.ribbon.enabled: false
    gateway:
        routes:
        - id: organization-service
          uri: lb://organization-service
          predicates:
          - Path=/organization/**
          filters:
          - RewritePath=/organization/(?<path>.*), /$\{path}
        - id: licensing-service
          uri: lb://licensing-service
          predicates:
          - Path=/license/**
          filters:
          - RewritePath=/license/(?<path>.*), /$\{path}
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: spring-micro-gateway
            client-secret: 0iE444QmFyi9nBAy2AvLkW6UyMkvTYsF
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            issuer-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs

    
management:
  endpoints:
    gateway:
      enabled: true
    web:
      exposure:
        include: "*"
